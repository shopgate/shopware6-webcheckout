{% sw_extends '@Storefront/storefront/page/checkout/finish/index.html.twig' %}

{# Find out currency of the order (fallback to context) #}
{% set currency = page.currency %}
{% if not currency %}
    {% set currency = context.currency %}
{% endif %}

{# Porduct data #}
{% set SGCproducts = [] %}

{% for lineItem in page.order.lineItems.elements %}
    {% set calculatedTax = lineItem.price.calculatedTaxes.getAmount %}
    {% if context.taxState == "gross" %}
        {% set grossPrice = lineItem.price.unitPrice %}
        {% set netPrice = lineItem.price.unitPrice - calculatedTax %}
    {% else %}
        {% set netPrice = lineItem.price.unitPrice %}
        {% set grossPrice = lineItem.price.unitPrice + calculatedTax %}
    {% endif %}
    {% set SGCproducts = SGCproducts|merge([{
        id: lineItem.productId,
        name: lineItem.label,
        quantity: lineItem.quantity,
        price: {
            withTax: grossPrice,
            net: netPrice
        }
    }]) %}
{% endfor %}

{# Passing options to the plugin to catch & handle sending event #}
{# replace_recursive makes sure we do not rewrite our controller/action data #}
{% set sgWebcheckoutOptions = sgWebcheckoutOptions|default({})|replace_recursive({
    properties: {
        order: {
            number: page.order.orderNumber,
            currency: currency.isoCode,
            totals: [
                {
                    type: 'shipping',
                    amount: page.order.shippingTotal,
                },
                {
                    type: 'tax',
                    amount: page.order.amountTotal - page.order.amountNet
                },
                {
                    type: 'grandTotal',
                    amount: page.order.amountTotal
                }
            ],
            products: SGCproducts
        }
    }
}) %}
